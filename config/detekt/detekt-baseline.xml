<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>LongParameterList:ClerkComposeTheme.kt$ClerkComposeTheme$( val primary: Color, val background: Color, val input: Color, val danger: Color, val success: Color, val warning: Color, val foreground: Color, val mutedForeground: Color, val primaryForeground: Color, val inputForeground: Color, val neutral: Color, val border: Color, val shadow: Color, val ring: Color, val muted: Color, val isDark: Boolean, )</ID>
    <ID>LongParameterList:ClerkFonts.kt$ClerkFonts$( /** Largest title style, e.g. 34 sp Semibold. */ val largeTitle: Font, /** Base title style. */ val title: Font, /** Second-level title style. */ val title2: Font, /** Third-level title style. */ val title3: Font, /** Prominent body style suitable for headlines. */ val headline: Font, /** Default body text style. */ val body: Font, /** Slightly smaller than body for tertiary content. */ val callout: Font, /** Label for grouped content sections. */ val subhead: Font, /** Auxiliary notes such as table footers. */ val footnote: Font, /** Smallest style for image captions etc. */ val caption: Font, /** Even smaller variant of [caption] when required. */ val caption2: Font, )</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFF000000</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFF212126</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFF22C543</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFF2F3037</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFF747686</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFFEF4444</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFFF36B16</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFFF7F7F7</ID>
    <ID>MagicNumber:ClerkColors.kt$ThemeColor.Companion$0xFFFFFFFF</ID>
    <ID>MagicNumber:DeviceAttestationHelper.kt$DeviceAttestationHelper$8</ID>
    <ID>NestedBlockDepth:ClientSyncingMiddleware.kt$ClientSyncingMiddleware$override fun intercept(chain: Interceptor.Chain): Response</ID>
    <ID>NewLineAtEndOfFile:MainApplication.kt$com.clerk.compatibility.MainApplication.kt</ID>
    <ID>NewLineAtEndOfFile:build.gradle.kts$.build.gradle.kts</ID>
    <ID>ReturnCount:DeviceAssertionMiddleware.kt$DeviceAssertionInterceptor.DeviceAttestationManager$suspend fun performDeviceAssertion(request: Request, error: ClerkError): Boolean</ID>
    <ID>SwallowedException:ClerkTest.kt$ClerkTest$e: Exception</ID>
    <ID>SwallowedException:PasskeyCredentialManagerTest.kt$PasskeyCredentialManagerTest$e: Exception</ID>
    <ID>TooGenericExceptionThrown:DeviceAttestationHelper.kt$DeviceAttestationHelper$throw RuntimeException("Failed to hash clientId", e)</ID>
    <ID>TooManyFunctions:ConfigurationManager.kt$ConfigurationManager</ID>
    <ID>TooManyFunctions:User.kt$com.clerk.api.user.User.kt</ID>
    <ID>UnusedPrivateClass:ClerkApiResultCallAdapterFactory.kt$ApiException : Exception</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val detektProjectBaseline by tasks.registering(DetektCreateBaselineTask::class) { description = "Overrides current baseline." buildUponDefaultConfig.set(true) ignoreFailures.set(true) parallel.set(true) setSource(files(rootDir)) config.setFrom(files("$rootDir/config/detekt/detekt.yml")) baseline.set(file("$rootDir/config/detekt/detekt-baseline.xml")) include("**/*.kt") include("**/*.kts") exclude("**/resources/**") exclude("**/build/**") }</ID>
    <ID>WildcardImport:ExampleInstrumentedTest.kt$import org.junit.Assert.*</ID>
    <ID>WildcardImport:ExampleUnitTest.kt$import org.junit.Assert.*</ID>
  </CurrentIssues>
</SmellBaseline>
