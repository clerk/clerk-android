<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>CyclomaticComplexMethod:ClerkComposeTheme.kt$@Composable private fun generateComputedColors(colors: ClerkColors): ComputedColors</ID>
    <ID>CyclomaticComplexMethod:ClerkTextField.kt$@Composable fun ClerkTextField( value: String, onValueChange: (String) -> Unit, modifier: Modifier = Modifier, @DrawableRes leadingIcon: Int? = null, @DrawableRes trailingIcon: Int? = null, label: String? = null, placeholder: String? = null, supportingText: String? = null, isError: Boolean = false, enabled: Boolean = true, onLeadingIconClick: () -> Unit = {}, onTrailingIconClick: () -> Unit = {}, inputContentType: ContentType = ContentType.Username, leadingIconContentDescription: String? = null, trailingIconContentDescription: String? = null, visualTransformation: VisualTransformation = VisualTransformation.None, )</ID>
    <ID>CyclomaticComplexMethod:ClerkThemeProvider.kt$@Composable private fun generateColors(theme: ClerkTheme?): ClerkColors</ID>
    <ID>LongMethod:ClerkButton.kt$@PreviewLightDark @Composable private fun PreviewButton()</ID>
    <ID>LongMethod:ClerkPhoneNumberField.kt$@Composable private fun PhoneNumberInput( computedColors: ComputedColors, value: String, onValueChange: (String) -> Unit, countryCode: String, errorText: String? = null, )</ID>
    <ID>LongMethod:ClerkStandardButtonSnapshotTest.kt$ClerkStandardButtonSnapshotTest$@Test fun clerkButtonGallery()</ID>
    <ID>LongMethod:ClerkTextField.kt$@Composable fun ClerkTextField( value: String, onValueChange: (String) -> Unit, modifier: Modifier = Modifier, @DrawableRes leadingIcon: Int? = null, @DrawableRes trailingIcon: Int? = null, label: String? = null, placeholder: String? = null, supportingText: String? = null, isError: Boolean = false, enabled: Boolean = true, onLeadingIconClick: () -> Unit = {}, onTrailingIconClick: () -> Unit = {}, inputContentType: ContentType = ContentType.Username, leadingIconContentDescription: String? = null, trailingIconContentDescription: String? = null, visualTransformation: VisualTransformation = VisualTransformation.None, )</ID>
    <ID>LongMethod:ClerkTextField.kt$@PreviewLightDark @Composable private fun PreviewClerkTextField()</ID>
    <ID>LongMethod:ClerkTextField.kt$@PreviewLightDark @Composable private fun PreviewClerkTextFieldError()</ID>
    <ID>LongMethod:ClerkTextFieldSnapshotTest.kt$ClerkTextFieldSnapshotTest$@Test fun testClerkTextFieldError()</ID>
    <ID>LongMethod:ClerkTextFieldSnapshotTest.kt$ClerkTextFieldSnapshotTest$@Test fun testClerkTextFieldUnfocused()</ID>
    <ID>LongMethod:SignInFactorOnePasswordView.kt$@Composable private fun SignInFactorOnePasswordViewImpl( onBackPressed: () -> Unit, email: String, onContinue: (String) -> Unit, onUseAnotherMethod: () -> Unit, modifier: Modifier = Modifier, onForgotPassword: () -> Unit, )</ID>
    <ID>LongParameterList:ClerkButton.kt$( text: String, onClick: () -> Unit, buttonConfig: ClerkButtonConfig, isEnabled: Boolean, isPressedCombined: Boolean, interactionSource: MutableInteractionSource, modifier: Modifier = Modifier, icons: ClerkButtonIcons = ClerkButtonDefaults.icons(), )</ID>
    <ID>MagicNumber:DeviceAttestationHelper.kt$DeviceAttestationHelper$8</ID>
    <ID>NestedBlockDepth:ClientSyncingMiddleware.kt$ClientSyncingMiddleware$override fun intercept(chain: Interceptor.Chain): Response</ID>
    <ID>ReturnCount:DeviceAssertionMiddleware.kt$DeviceAssertionInterceptor.DeviceAttestationManager$suspend fun performDeviceAssertion(request: Request, error: ClerkError): Boolean</ID>
    <ID>SwallowedException:ClerkTest.kt$ClerkTest$e: Exception</ID>
    <ID>SwallowedException:PasskeyCredentialManagerTest.kt$PasskeyCredentialManagerTest$e: Exception</ID>
    <ID>TooGenericExceptionThrown:DeviceAttestationHelper.kt$DeviceAttestationHelper$throw RuntimeException("Failed to hash clientId", e)</ID>
    <ID>TooManyFunctions:ConfigurationManager.kt$ConfigurationManager</ID>
    <ID>TooManyFunctions:Organization.kt$com.clerk.api.organizations.Organization.kt</ID>
    <ID>TooManyFunctions:OrganizationApi.kt$OrganizationApi</ID>
    <ID>TooManyFunctions:User.kt$com.clerk.api.user.User.kt</ID>
    <ID>UnusedParameter:SignInFactorOneView.kt$modifier: Modifier = Modifier</ID>
    <ID>UnusedPrivateClass:ClerkApiResultCallAdapterFactory.kt$ApiException : Exception</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val detektProjectBaseline by tasks.registering(DetektCreateBaselineTask::class) { description = "Overrides current baseline." buildUponDefaultConfig.set(true) ignoreFailures.set(true) parallel.set(true) setSource(files(rootDir)) config.setFrom(files("$rootDir/config/detekt/detekt.yml")) baseline.set(file("$rootDir/config/detekt/detekt-baseline.xml")) include("**/*.kt") include("**/*.kts") exclude("**/resources/**") exclude("**/build/**") }</ID>
  </CurrentIssues>
</SmellBaseline>
