<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>CyclomaticComplexMethod:ClerkComposeTheme.kt$@Composable private fun generateComputedColors(colors: ClerkColors): ComputedColors</ID>
    <ID>CyclomaticComplexMethod:ClerkThemeProvider.kt$@Composable private fun generateColors(theme: ClerkTheme?): ClerkColors</ID>
    <ID>LongMethod:AuthStartView.kt$@Composable internal fun AuthStartViewImpl( onAuthComplete: () -> Unit, modifier: Modifier = Modifier, authViewHelper: AuthStartViewHelper = AuthStartViewHelper(), authStartViewModel: AuthStartViewModel = viewModel(), )</ID>
    <ID>LongMethod:ClerkButton.kt$@PreviewLightDark @Composable private fun PreviewButton()</ID>
    <ID>LongMethod:ClerkPhoneNumberField.kt$@Composable private fun PhoneNumberInput( computedColors: ComputedColors, value: String, onValueChange: (String) -> Unit, countryCode: String, errorText: String? = null, )</ID>
    <ID>LongMethod:ClerkStandardButtonSnapshotTest.kt$ClerkStandardButtonSnapshotTest$@Test fun clerkButtonGallery()</ID>
    <ID>LongMethod:ClerkTextField.kt$@Composable fun ClerkTextField( value: String, onValueChange: (String) -> Unit, modifier: Modifier = Modifier, onFocusChange: (Boolean) -> Unit = {}, @DrawableRes leadingIcon: Int? = null, @DrawableRes trailingIcon: Int? = null, label: String? = null, placeholder: String? = null, supportingText: String? = null, isError: Boolean = false, enabled: Boolean = true, inputContentType: ContentType = ContentType.Username, visualTransformation: VisualTransformation = VisualTransformation.None, )</ID>
    <ID>LongMethod:ClerkTextField.kt$@PreviewLightDark @Composable private fun PreviewClerkTextField()</ID>
    <ID>LongMethod:ClerkTextField.kt$@PreviewLightDark @Composable private fun PreviewClerkTextFieldError()</ID>
    <ID>LongMethod:ClerkTextFieldSnapshotTest.kt$ClerkTextFieldSnapshotTest$@Test fun testClerkTextFieldError()</ID>
    <ID>LongMethod:ClerkTextFieldSnapshotTest.kt$ClerkTextFieldSnapshotTest$@Test fun testClerkTextFieldUnfocused()</ID>
    <ID>LongMethod:SignUpCollectFieldView.kt$@Composable private fun SignUpCollectFieldViewImpl( collectField: CollectField, collectFieldHelper: CollectFieldHelper, progress: Int, onAuthComplete: () -> Unit, modifier: Modifier = Modifier, viewModel: CollectFieldViewModel = viewModel(), )</ID>
    <ID>LongParameterList:AuthStartView.kt$( authViewHelper: AuthStartViewHelper, phoneNumberFieldIsActive: Boolean, authStartPhoneNumber: String, authStartIdentifier: String, onPhoneNumberChange: (String) -> Unit, onIdentifierChange: (String) -> Unit, )</ID>
    <ID>LongParameterList:ClerkButton.kt$( isLoading: Boolean, padding: ClerkButtonPadding, icons: ClerkButtonIcons, isEnabled: Boolean, text: String, tokens: ButtonStyleTokens, )</ID>
    <ID>LongParameterList:ClerkButton.kt$( text: String, onClick: () -> Unit, isEnabled: Boolean, isPressedCombined: Boolean, interactionSource: MutableInteractionSource, isLoading: Boolean, padding: ClerkButtonPadding, configuration: ClerkButtonConfiguration, modifier: Modifier = Modifier, icons: ClerkButtonIcons = ClerkButtonDefaults.icons(), )</ID>
    <ID>LongParameterList:SignUpCollectFieldView.kt$( collectField: CollectField, collectFieldHelper: CollectFieldHelper, email: String, onEmailChange: (String) -> Unit, password: String, onPasswordChange: (String) -> Unit, phone: String, onPhoneChange: (String) -> Unit, username: String, onUsernameChange: (String) -> Unit, )</ID>
    <ID>LongParameterList:SignUpCompleteProfileView.kt$( firstEnabled: Boolean, lastEnabled: Boolean, first: String, last: String, onFirstChange: (String) -> Unit, onLastChange: (String) -> Unit, onFocusChange: (CompleteProfileField) -> Unit = {}, )</ID>
    <ID>MagicNumber:ColorUtils.kt$4f</ID>
    <ID>MagicNumber:DeviceAttestationHelper.kt$DeviceAttestationHelper$8</ID>
    <ID>MatchingDeclarationName:ColorUtils.kt$DangerPalette</ID>
    <ID>NestedBlockDepth:ClientSyncingMiddleware.kt$ClientSyncingMiddleware$override fun intercept(chain: Interceptor.Chain): Response</ID>
    <ID>ReturnCount:DeviceAssertionMiddleware.kt$DeviceAssertionInterceptor.DeviceAttestationManager$suspend fun performDeviceAssertion(request: Request, error: ClerkError): Boolean</ID>
    <ID>SwallowedException:PasskeyCredentialManagerTest.kt$PasskeyCredentialManagerTest$e: Exception</ID>
    <ID>TooGenericExceptionThrown:DeviceAttestationHelper.kt$DeviceAttestationHelper$throw RuntimeException("Failed to hash clientId", e)</ID>
    <ID>TooManyFunctions:AuthStartViewModel.kt$AuthStartViewModel : ViewModel</ID>
    <ID>TooManyFunctions:ConfigurationManager.kt$ConfigurationManager</ID>
    <ID>TooManyFunctions:Organization.kt$com.clerk.api.organizations.Organization.kt</ID>
    <ID>TooManyFunctions:OrganizationApi.kt$OrganizationApi</ID>
    <ID>TooManyFunctions:User.kt$com.clerk.api.user.User.kt</ID>
    <ID>UnusedPrivateClass:ClerkApiResultCallAdapterFactory.kt$ApiException : Exception</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val detektProjectBaseline by tasks.registering(DetektCreateBaselineTask::class) { description = "Overrides current baseline." buildUponDefaultConfig.set(true) ignoreFailures.set(true) parallel.set(true) setSource(files(rootDir)) config.setFrom(files("$rootDir/config/detekt/detekt.yml")) baseline.set(file("$rootDir/config/detekt/detekt-baseline.xml")) include("**/*.kt") include("**/*.kts") exclude("**/resources/**") exclude("**/build/**") }</ID>
  </CurrentIssues>
</SmellBaseline>
